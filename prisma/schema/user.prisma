model User {
  id                  Int                  @id @default(autoincrement())
  username            String               @unique @db.VarChar(255)
  email               String               @unique @db.VarChar(255)
  password            String?              @db.VarChar(255)
  isActive            Boolean              @default(false) @map("is_active")
  isAdmin             Boolean              @default(false) @map("is_admin")
  emailVerified       Boolean              @default(false) @map("email_verified")
  image               String?
  createdAt           DateTime             @default(now()) @map("created_at")
  updatedAt           DateTime             @default(now()) @updatedAt @map("updated_at")
  usernameUpdatedAt   DateTime?            @map("username_updated_at")
  changeEmailRequests ChangeEmailRequest[]
  roles               UserRole[]
  toolsFavorites      UserToolFavorites[]
  Feedback            Feedback[]
  tokens              Token[]
  userMetadata        UserMetadata?

  @@map("users")
}

model ChangeEmailRequest {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      @map("user_id")
  oldEmail  String   @map("old_email")
  newEmail  String   @map("new_email")
  token     String
  isUsed    Boolean  @default(false) @map("is_used")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("change_email_requests")
}

model UserMetadata {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      @unique @map("user_id")
  metadata  Json?    @map("metadata")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  @@map("user_metadata")
}
